@using Microsoft.AspNetCore.Components.Authorization

@rendermode InteractiveServer

@inject NavigationManager Navigation

<AuthorizeView>
    <Authorized>
        <div class="d-flex align-items-center">
            <span class="nav-link text-dark">Hello, @context.User.Identity?.Name!</span>
            <button class="nav-link btn btn-link" @onclick="BeginSignOut">Log out</button>
        </div>
    </Authorized>
    <NotAuthorized>
        <a href="/Account/Login?redirectUri=/">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code {
    private Task BeginSignOut()
    {
        // Переходим на наш новый эндпоинт выхода.
        // forceLoad: true заставляет браузер сделать полный HTTP-запрос к серверу,
        // а не пытаться обработать навигацию на клиенте. Это ключевой момент!
        Navigation.NavigateTo("/Account/Logout", forceLoad: true);
        return Task.CompletedTask;
    }
}