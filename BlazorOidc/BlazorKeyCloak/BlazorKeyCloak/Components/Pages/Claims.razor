@page "/claims"
@attribute [StreamRendering]

@attribute [Authorize]

@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Your Claims</h3>

<AuthorizeView>
    <Authorized>
        @if (claims.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Claim Type</th>
                        <th>Claim Value</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var claim in claims)
                    {
                        <tr>
                            <td>@claim.Type</td>
                            <td>@claim.Value</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>No claims found.</p>
        }
    </Authorized>
    <NotAuthorized>
        <p>You are not logged in.</p>
    </NotAuthorized>
</AuthorizeView>


@code {
    private IEnumerable<System.Security.Claims.Claim> claims = Enumerable.Empty<System.Security.Claims.Claim>();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            claims = user.Claims;
        }
    }
}